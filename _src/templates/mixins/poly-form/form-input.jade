
mixin form-input(options)
  - options       = options               || {}

  - className     = options.class         || 'col-md-6'
  - inputClass    = options.inputClass    || 'form-control'
  - inputStyle    = options.inputStyle    || null
  - name          = options.name          || 'control'
  - $$id = $$id || 0
  - id            = options.id            || (options.name+$$id || 'control'+$$id)
  - $$id++
  - model         = options.model         || (options.id || id)
  - label         = options.label         || 'Ετικέτα'
  - placeholder   = options.placeholder   || label
  - autocomplete  = options.autocomplete  || name
  - type          = options.type          || 'text'
  - value         = options.value         || null
  - checked       = options.checked       || null
  - popover       = options.popover       || null

  - select2Data   = options.select2Data   || null

  - select2Input       = type=='select2-input' ? name+'.uiSelect2QueryData' : null
  - multiple           = options.multiple || null

  - uiSelect2Query                  = options.uiSelect2Query                || null
  - queryMapData                    = options.queryMapData                  || null
  - queryDataType                   = options.queryDataType                 || null
  - queryResultsArrayPath           = options.queryResultsArrayPath         || null
  - queryResultText                 = options.queryResultText               || null
  - queryResultId                   = options.queryResultId                 || null
  - queryResultChildText            = options.queryResultChildText          || null
  - queryResultChildId              = options.queryResultChildId            || null
  - queryResultChildrenPath         = options.queryResultChildrenPath       || null
  - queryResultIsParentSelectable   = options.queryResultIsParentSelectable || null
  - allowClear                      = options.allowClear                    || null
  - quietMillis                     = options.quietMillis                   || null
  - minimumInputLength              = options.minimumInputLength            || null
  - maximumInputLength              = options.maximumInputLength            || null
  - maximumSelectionSize            = options.maximumSelectionSize          || null
  - queryInitMessage                = options.queryInitMessage              || null
  - queryNoMatchesMessage           = options.queryNoMatchesMessage         || null
  - queryTooShortMessage            = options.queryTooShortMessage          || null
  - queryTooLongMessage             = options.queryTooLongMessage           || null
  - querySelectionTooBigMessage     = options.querySelectionTooBigMessage   || null
  - queryLoadMoreMessage            = options.queryLoadMoreMessage          || null
  - querySearchingMessage           = options.querySearchingMessage         || null

  - isUnique                        = options.isUnique                      || null  // Async Validation. Value must be a URL. Validation is done on server and must return json. example { "isUnique": "true" }
  - isUniqueMapData                 = options.mapData                       || null  // Maps json data to isUnique url. example isUnique="test.json?param:value" isUniqueMapData="{value=true}"
  - isUniqueDataType                = options.isUniqueDataType              || null

  - remoteValidation                = options.remoteValidation              || null  // Async Validation. Value must be a URL. Validation is done on server and must return json. example { "isUnique": "true" }
  - remoteValidationMapData         = options.remoteValidationMapData       || null  // Maps json data to isUnique url. example isUnique="test.json?param:value" isUniqueMapData="{value=true}"
  - remoteValidationDataType        = options.remoteValidationDataType      || null

  - isEqual     = options.isEqual     || null
  - ngChecked   = options.ngChecked   || null
  - ngValue     = options.ngValue     || null

  - ngRequired  = options.ngRequired  || 'true' // Sets required attribute if set to true
  - ngRequired  = ngRequired=='false' ? null : 'true'

  - uiValidate       = options.uiValidate       || null   // The ui-validate directive makes it very easy to create custom validator expressions.
  - uiValidateWatch  = options.uiValidateWatch  || null

  - ngMinlength = options.ngMinlength || null   // Sets minlength validation error key if the value is shorter than minlength.
  - ngMaxlength = options.ngMaxlength || null   // Sets maxlength validation error key if the value is longer than maxlength.
  - ngPattern   = options.ngPattern   || null   // Sets pattern validation error key if the value does not match the RegExp pattern expression. Expected value is /regexp/ for inline patterns or regexp for patterns defined as scope expressions.
  - ngChange    = options.ngChange    || null   // Angular expression to be executed when input changes due to user interaction with the input element.
  - ngTrim      = options.ngTrim      || null   // If set to false Angular will not automatically trim the input. This parameter is ignored for input[type=password] controls, which will never trim the input.

  input(
    class=inputClass,
    style=inputStyle,
    name=name,
    id= id,
    ng-model=model,

    autocomplete=autocomplete,
    type=(type=='select2'?null:type),
    placeholder=placeholder,
    value=value,
    ng-value=ngValue,
    checked=checked,
    ng-checked=ngChecked,
    multiple=multiple,

    ui-select2= select2Input,
    data-ui-select2-query=                  ( select2Input ? uiSelect2Query ? uiSelect2Query : 'http://www.weighttraining.com/api/v2/sm/search?types%5B%5D=:type&term=:value&limit=:limit':null),
    data-query-map-data=                    ( select2Input ? queryMapData ? queryMapData : "{type: 'exercise', limit: -1}":null),
    data-query-data-type=                   ( select2Input ? queryDataType ? queryDataType : "jsonp":null),
    data-query-results-array-path=          ( select2Input ? queryResultsArrayPath ? queryResultsArrayPath : "results.exercise":null),
    data-query-result-text=                 ( select2Input ? queryResultText ? queryResultText : "term":null),
    data-query-result-id=                   ( select2Input ? queryResultId ? queryResultId : "id":null),
    data-query-result-child-text=           ( select2Input ? queryResultChildText ? queryResultChildText : "text":null),
    data-query-result-child-id=             ( select2Input ? queryResultChildId ? queryResultChildId : "id":null),
    data-query-result-children-path=        ( select2Input ? queryResultChildrenPath ? queryResultChildrenPath : "countries":null),
    data-query-result-is-parent-selectable= ( select2Input ? queryResultIsParentSelectable ? queryResultIsParentSelectable : "false":null),
    data-allow-clear=                       ( select2Input ? allowClear ? allowClear : "true":null),
    data-quiet-millis=                      ( select2Input ? quietMillis ? quietMillis : "500":null),
    data-minimum-input-length=              ( select2Input ? minimumInputLength ? minimumInputLength : "3":null),
    data-maximum-input-length=              ( select2Input ? maximumInputLength ? maximumInputLength : "50":null),
    data-maximum-selection-size=            ( select2Input ? maximumSelectionSize ? maximumSelectionSize : "10":null),
    data-query-init-message=                ( select2Input && queryInitMessage ? queryInitMessage :null),
    data-query-no-matches-message=          ( select2Input && queryNoMatchesMessage ? queryNoMatchesMessage:null),
    data-query-too-short-message=           ( select2Input && queryTooShortMessage ? queryTooShortMessage:null),
    data-query-too-long-message=            ( select2Input && queryTooLongMessage? queryTooLongMessage:null),
    data-query-selection-too-big-message=   ( select2Input && querySelectionTooBigMessage ? querySelectionTooBigMessage:null),
    data-query-load-more-message=           ( select2Input && queryLoadMoreMessage ? queryLoadMoreMessage :null),
    data-query-searching-message=           ( select2Input && querySearchingMessage ? querySearchingMessage:null),

    is-unique=isUnique,
    is-unique-map-data=isUniqueMapData,
    is-unique-data-type=isUniqueDataType,

    remote-validation=remoteValidation,
    remote-validation-map-data=remoteValidationMapData,
    remote-validation-data-type=remoteValidationDataType,

    is-equal=isEqual,
    ui-validate=uiValidate,
    ui-validate-watch=uiValidateWatch,
    ng-required=ngRequired,
    ng-minlength=ngMinlength,
    ng-maxlength=ngMaxlength,
    ng-pattern=ngPattern,
    ng-change=ngChange,
    ng-trim=ngTrim
  )
