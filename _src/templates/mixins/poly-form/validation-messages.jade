mixin validation-messages(options)
  - options       = options               || {}

  - className     = options.class         || 'col-md-6'
  - name          = options.name          || 'control'
  - label         = options.label         || 'Ετικέτα'
  - placeholder   = options.placeholder   || label
  - autocomplete  = options.autocomplete  || name
  - type          = options.type          || 'text'
  - popover       = options.popover       || null

  - isUnique      = options.isUnique      || null  // Async Validation. Value must be a URL. Validation is done on server and must return json. example { "isUnique": "true" }
  - isEqual       = options.isEqual       || null

  - remoteValidation  = options.remoteValidation || null  // Async Validation. Value must be a URL. Validation is done on server and must return json. example { "isUnique": "true" }

  - ngRequired  = options.ngRequired  || 'true' // Sets required attribute if set to true
  - ngRequired  = ngRequired=='false' ? null : 'true'

  - uiValidate       = options.uiValidate       || null   // The ui-validate directive makes it very easy to create custom validator expressions.
  - uiValidateWatch  = options.uiValidateWatch  || null

  - ngMinlength = options.ngMinlength || null   // Sets minlength validation error key if the value is shorter than minlength.
  - ngMaxlength = options.ngMaxlength || null   // Sets maxlength validation error key if the value is longer than maxlength.
  - ngPattern   = options.ngPattern   || null   // Sets pattern validation error key if the value does not match the RegExp pattern expression. Expected value is /regexp/ for inline patterns or regexp for patterns defined as scope expressions.
  - ngChange    = options.ngChange    || null   // Angular expression to be executed when input changes due to user interaction with the input element.
  - ngTrim      = options.ngTrim      || null   // If set to false Angular will not automatically trim the input. This parameter is ignored for input[type=password] controls, which will never trim the input.

  - ngEmailMessage     = options.ngEmailMessage       || 'Please type a correct email'
  - ngNumberMessage    = options.ngNumberMessage      || 'Please type a number'

  - uiValidateMessage  = options.isUniqueMessage     || 'Validation failed'

  - isUniqueMessage     = options.isUniqueMessage     || 'Please type a unique name'
  - isEqualMessage      = options.isEqualMessage      || 'Fields don\'t match'
  - ngRequiredMessage   = options.ngRequiredMessage   || 'Field is required'
  - ngMinlengthMessage  = options.ngMinlengthMessage  || 'Please type more than ' + ngMinlength +' characters'
  - ngMaxlengthMessage  = options.ngMaxlengthMessage  || 'Please type less than ' + ngMaxlength +' characters'
  - ngPatternMessage    = options.ngPatternMessage    || 'Please type field with pattern!'


  if type=='email' && ngEmailMessage
    error-message.ng-email(ng-cloak)= ngEmailMessage
  if type=='number' && ngNumberMessage
    error-message.ng-number(ng-cloak)= ngNumberMessage

  if isEqual && isEqualMessage
    error-message.is-equal(ng-cloak)= isEqualMessage
  if isUnique && isUniqueMessage
    error-message.is-uinique(ng-cloak)= isUniqueMessage
  if ngRequired && ngRequiredMessage
    error-message.ng-required(ng-cloak)= ngRequiredMessage
  if ngMinlength && ngMinlengthMessage
    error-message.ng-minlength(ng-cloak)= ngMinlengthMessage
  if ngMaxlength && ngMaxlengthMessage
    error-message.ng-maxlength(ng-cloak)= ngMaxlengthMessage
  if ngPattern && ngPatternMessage
    error-message.ng-pattern(ng-cloak)= ngPatternMessage
  if uiValidate && uiValidateMessage
    error-message.ui-validate(ng-cloak)= uiValidateMessage
  if remoteValidation
    error-message.remote-validation(ng-cloak) Remote Error
